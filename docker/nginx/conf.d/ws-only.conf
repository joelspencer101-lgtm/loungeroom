# Minimal HTTP reverse proxy for WebSocket + API (no TLS)
# - http://localhost:8081/api/hb/ws/room -> backend (WS upgraded)
# - http://localhost:8081/api -> backend
# - http://localhost:8081/ -> frontend

upstream ct_backend_ws {
  server host.docker.internal:8001;
  keepalive 64;
}

upstream ct_frontend_ws {
  server host.docker.internal:3000;
  keepalive 64;
}

server {
  listen 80;
  server_name _;

  # WebSocket
  location /api/hb/ws/room {
    proxy_pass http://ct_backend_ws;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_read_timeout 3600s;
    proxy_send_timeout 3600s;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $remote_addr;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_buffering off;
  }

  # API
  location /api {
    proxy_pass http://ct_backend_ws;
    proxy_http_version 1.1;
    proxy_read_timeout 3600s;
    proxy_send_timeout 3600s;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $remote_addr;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  # Frontend
  location / {
    proxy_pass http://ct_frontend_ws;
    proxy_http_version 1.1;
    proxy_read_timeout 60s;
    proxy_send_timeout 60s;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $remote_addr;
    proxy_set_header X-Forwarded-Proto $scheme;
  }
}