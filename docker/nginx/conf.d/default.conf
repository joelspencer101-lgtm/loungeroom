# NGINX reverse proxy with TLS for Coffee Table
# - HTTPS at https://localhost:8443
# - /api + WS to backend at host.docker.internal:8001
# - everything else to frontend at host.docker.internal:3000

upstream ct_backend {
  server host.docker.internal:8001;
  keepalive 64;
}

upstream ct_frontend {
  server host.docker.internal:3000;
  keepalive 64;
}

# Optional: HTTP -> HTTPS redirect
server {
  listen 80;
  server_name _;
  return 301 https://$host:8443$request_uri;
}

server {
  listen 443 ssl http2;
  server_name _;

  ssl_certificate     /etc/nginx/certs/localhost.crt;
  ssl_certificate_key /etc/nginx/certs/localhost.key;
  ssl_protocols       TLSv1.2 TLSv1.3;
  ssl_ciphers         HIGH:!aNULL:!MD5;
  ssl_prefer_server_ciphers on;

  # WebSocket route for realtime room
  location /api/hb/ws/room {
    proxy_pass http://ct_backend;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_read_timeout 3600s;
    proxy_send_timeout 3600s;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $remote_addr;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_buffering off;
  }

  # All other API routes
  location /api {
    proxy_pass http://ct_backend;
    proxy_http_version 1.1;
    proxy_read_timeout 3600s;
    proxy_send_timeout 3600s;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $remote_addr;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  # Frontend dev server
  location / {
    proxy_pass http://ct_frontend;
    proxy_http_version 1.1;
    proxy_read_timeout 60s;
    proxy_send_timeout 60s;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $remote_addr;
    proxy_set_header X-Forwarded-Proto $scheme;
  }
}